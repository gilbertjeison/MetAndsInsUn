2019-12-13 15:48:29.772 -05:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-13 15:48:29.806 -05:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-12-13 15:48:29.808 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-12-13 15:48:29.808 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-12-13 15:48:29.808 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-12-13 15:48:29.809 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-12-13 15:48:29.809 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-12-13 16:09:10.037 -05:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-13 16:09:10.068 -05:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-12-13 16:09:10.071 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-12-13 16:09:10.071 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-12-13 16:09:10.071 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-12-13 16:09:10.071 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-12-13 16:09:10.071 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2020-01-06 10:41:20.744 -05:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-06 10:41:20.775 -05:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2020-01-06 10:41:20.778 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2020-01-06 10:41:20.778 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2020-01-06 10:41:20.779 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2020-01-06 10:41:20.779 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2020-01-06 10:41:20.779 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2020-01-06 10:45:33.190 -05:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-06 10:45:33.218 -05:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2020-01-06 10:45:33.220 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2020-01-06 10:45:33.220 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2020-01-06 10:45:33.220 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2020-01-06 10:45:33.220 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2020-01-06 10:45:33.220 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2020-01-06 10:56:02.146 -05:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-06 10:56:02.184 -05:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2020-01-06 10:56:02.186 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2020-01-06 10:56:02.186 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2020-01-06 10:56:02.186 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2020-01-06 10:56:02.186 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2020-01-06 10:56:02.186 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2020-01-06 11:06:40.949 -05:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-06 11:06:40.978 -05:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2020-01-06 11:06:40.981 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2020-01-06 11:06:40.981 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2020-01-06 11:06:40.981 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2020-01-06 11:06:40.981 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2020-01-06 11:06:40.981 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2020-01-06 11:08:11.799 -05:00 [ERR] 'MS-ASPNETCORE-TOKEN' does not match the expected pairing token '6aeb9f61-419f-4a30-8b83-309f0f5625dc', request rejected.
2020-01-06 11:08:57.061 -05:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-06 11:08:57.092 -05:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2020-01-06 11:08:57.095 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2020-01-06 11:08:57.095 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2020-01-06 11:08:57.096 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2020-01-06 11:08:57.096 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2020-01-06 11:08:57.096 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2020-01-06 11:08:57.516 -05:00 [DBG] Login Url: /Account/Login
2020-01-06 11:08:57.518 -05:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-01-06 11:08:57.518 -05:00 [DBG] Logout Url: /Account/Logout
2020-01-06 11:08:57.518 -05:00 [DBG] ConsentUrl Url: /consent
2020-01-06 11:08:57.518 -05:00 [DBG] Consent Return Url Parameter: returnUrl
2020-01-06 11:08:57.518 -05:00 [DBG] Error Url: /home/error
2020-01-06 11:08:57.518 -05:00 [DBG] Error Id Parameter: errorId
2020-01-06 11:09:36.079 -05:00 [INF] AuthenticationScheme: idsrv was challenged.
2020-01-06 11:48:23.835 -05:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-06 11:48:23.876 -05:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2020-01-06 11:48:23.881 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2020-01-06 11:48:23.881 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2020-01-06 11:48:23.881 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2020-01-06 11:48:23.881 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2020-01-06 11:48:23.881 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2020-01-06 11:50:27.641 -05:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5000
2020-01-06 11:50:27.647 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 11:50:27.647 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 11:50:27.734 -05:00 [DBG] Login Url: /Account/Login
2020-01-06 11:50:27.734 -05:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-01-06 11:50:27.734 -05:00 [DBG] Logout Url: /Account/Logout
2020-01-06 11:50:27.734 -05:00 [DBG] ConsentUrl Url: /consent
2020-01-06 11:50:27.734 -05:00 [DBG] Consent Return Url Parameter: returnUrl
2020-01-06 11:50:27.734 -05:00 [DBG] Error Url: /home/error
2020-01-06 11:50:27.734 -05:00 [DBG] Error Id Parameter: errorId
2020-01-06 11:50:27.759 -05:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-06 11:50:27.762 -05:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-06 11:50:27.762 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-06 11:50:27.767 -05:00 [DBG] Start discovery request
2020-01-06 11:50:27.814 -05:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-06 11:50:27.827 -05:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-06 11:50:27.828 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-06 11:50:27.831 -05:00 [DBG] Start authorize request
2020-01-06 11:50:27.840 -05:00 [DBG] No user present in authorize request
2020-01-06 11:50:27.844 -05:00 [DBG] Start authorize request protocol validation
2020-01-06 11:50:27.858 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 11:50:27.893 -05:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-06 11:50:27.906 -05:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:5000/callback","AllowedRedirectUris":["http://localhost:5000/callback","http://localhost:5000/static/silent-renew.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"333d6f812b2e46b2a1188e10c78119aa","UiLocales":null,"Nonce":"863d0f6630204ff194e2843b35131173","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:5000/callback","response_type":"id_token token","scope":"openid profile api1","state":"333d6f812b2e46b2a1188e10c78119aa","nonce":"863d0f6630204ff194e2843b35131173"},"$type":"AuthorizeRequestValidationLog"}
2020-01-06 11:50:27.929 -05:00 [INF] Showing login: User is not authenticated
2020-01-06 11:50:28.093 -05:00 [DBG] Start authorize request protocol validation
2020-01-06 11:50:28.094 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 11:50:28.094 -05:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-06 11:50:28.096 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 11:50:36.296 -05:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-06 11:50:36.333 -05:00 [DBG] Start authorize request protocol validation
2020-01-06 11:50:36.333 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 11:50:36.333 -05:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-06 11:50:36.351 -05:00 [DBG] Augmenting SignInContext
2020-01-06 11:50:36.353 -05:00 [DBG] Adding idp claim with value: local
2020-01-06 11:50:36.353 -05:00 [DBG] Adding amr claim with value: pwd
2020-01-06 11:50:36.364 -05:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-06 11:50:36.365 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 11:50:36.378 -05:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-06 11:50:36.379 -05:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-06 11:50:36.379 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-06 11:50:36.384 -05:00 [DBG] Start authorize callback request
2020-01-06 11:50:36.388 -05:00 [DBG] User in authorize request: 1
2020-01-06 11:50:36.388 -05:00 [DBG] Start authorize request protocol validation
2020-01-06 11:50:36.388 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 11:50:36.388 -05:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-06 11:50:36.388 -05:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:5000/callback","AllowedRedirectUris":["http://localhost:5000/callback","http://localhost:5000/static/silent-renew.html"],"SubjectId":"1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"333d6f812b2e46b2a1188e10c78119aa","UiLocales":null,"Nonce":"863d0f6630204ff194e2843b35131173","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7c73eba013061deaa54a97f66ed74c79","Raw":{"client_id":"js","redirect_uri":"http://localhost:5000/callback","response_type":"id_token token","scope":"openid profile api1","state":"333d6f812b2e46b2a1188e10c78119aa","nonce":"863d0f6630204ff194e2843b35131173"},"$type":"AuthorizeRequestValidationLog"}
2020-01-06 11:50:36.390 -05:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-06 11:50:36.398 -05:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-06 11:50:36.404 -05:00 [DBG] Creating Implicit Flow response.
2020-01-06 11:50:36.414 -05:00 [DBG] Getting claims for access token for client: js
2020-01-06 11:50:36.414 -05:00 [DBG] Getting claims for access token for subject: 1
2020-01-06 11:50:36.417 -05:00 [DBG] Get profile called for subject 1 from client JavaScript Client with claim types [] via ClaimsProviderAccessToken
2020-01-06 11:50:36.418 -05:00 [DBG] Issued claims: []
2020-01-06 11:50:36.544 -05:00 [DBG] Getting claims for identity token for subject: 1 and client: js
2020-01-06 11:50:36.544 -05:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-06 11:50:36.551 -05:00 [INF] Authorize endpoint response
{"SubjectId":"1","ClientId":"js","RedirectUri":"http://localhost:5000/callback","State":"333d6f812b2e46b2a1188e10c78119aa","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-01-06 11:50:36.565 -05:00 [DBG] Augmenting SignInContext
2020-01-06 11:50:36.565 -05:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-06 11:50:39.082 -05:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5000
2020-01-06 11:50:39.083 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 11:50:39.083 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 11:50:39.084 -05:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-06 11:50:39.084 -05:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-06 11:50:39.085 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-06 11:50:39.085 -05:00 [DBG] Start discovery request
2020-01-06 11:50:39.102 -05:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5000
2020-01-06 11:50:39.102 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 11:50:39.102 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 11:50:39.103 -05:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-06 11:50:39.111 -05:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-06 11:50:39.111 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-06 11:50:39.118 -05:00 [DBG] Start key discovery request
2020-01-06 11:50:39.153 -05:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5000
2020-01-06 11:50:39.153 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 11:50:39.153 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 11:50:39.159 -05:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5000
2020-01-06 11:50:39.159 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 11:50:39.159 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 11:50:39.159 -05:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-06 11:50:39.160 -05:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-06 11:50:39.160 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-06 11:50:39.166 -05:00 [DBG] Start userinfo request
2020-01-06 11:50:39.169 -05:00 [DBG] Bearer token found in header
2020-01-06 11:50:39.224 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 11:50:39.226 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 11:50:39.227 -05:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-06 11:50:39.227 -05:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-06 11:50:39.228 -05:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1578329436,"exp":1579229436,"iss":"http://localhost:5093","aud":["http://localhost:5093/resources","api1"],"client_id":"js","sub":"1","auth_time":1578329436,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-01-06 11:50:39.230 -05:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-06 11:50:39.233 -05:00 [DBG] Creating userinfo response
2020-01-06 11:50:39.237 -05:00 [DBG] Scopes in access token: openid profile api1
2020-01-06 11:50:39.241 -05:00 [DBG] Scopes in access token: openid profile api1
2020-01-06 11:50:39.243 -05:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-06 11:50:39.243 -05:00 [DBG] Scopes in access token: openid profile api1
2020-01-06 11:50:39.243 -05:00 [DBG] Get profile called for subject 1 from client JavaScript Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-06 11:50:39.244 -05:00 [DBG] Issued claims: ["name","website"]
2020-01-06 11:50:39.245 -05:00 [INF] Profile service returned the following claim types: name website
2020-01-06 11:50:39.245 -05:00 [DBG] End userinfo request
2020-01-06 11:50:39.252 -05:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-01-06 11:50:39.252 -05:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-01-06 11:50:39.252 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-01-06 11:50:39.254 -05:00 [DBG] Rendering check session result
2020-01-06 11:58:50.882 -05:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-06 11:58:50.924 -05:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2020-01-06 11:58:50.928 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2020-01-06 11:58:50.928 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2020-01-06 11:58:50.928 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2020-01-06 11:58:50.928 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2020-01-06 11:58:50.929 -05:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2020-01-06 11:59:36.356 -05:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5000
2020-01-06 11:59:36.364 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 11:59:36.364 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 11:59:36.438 -05:00 [DBG] Login Url: /Account/Login
2020-01-06 11:59:36.438 -05:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-01-06 11:59:36.438 -05:00 [DBG] Logout Url: /Account/Logout
2020-01-06 11:59:36.438 -05:00 [DBG] ConsentUrl Url: /consent
2020-01-06 11:59:36.438 -05:00 [DBG] Consent Return Url Parameter: returnUrl
2020-01-06 11:59:36.438 -05:00 [DBG] Error Url: /home/error
2020-01-06 11:59:36.438 -05:00 [DBG] Error Id Parameter: errorId
2020-01-06 11:59:36.458 -05:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-06 11:59:36.461 -05:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-06 11:59:36.462 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-06 11:59:36.466 -05:00 [DBG] Start discovery request
2020-01-06 11:59:36.941 -05:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-01-06 11:59:36.941 -05:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-01-06 11:59:36.941 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-01-06 11:59:36.942 -05:00 [DBG] Rendering check session result
2020-01-06 11:59:57.875 -05:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5000
2020-01-06 11:59:57.875 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 11:59:57.875 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 11:59:57.876 -05:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-06 11:59:57.876 -05:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-06 11:59:57.876 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-06 11:59:57.876 -05:00 [DBG] Start discovery request
2020-01-06 11:59:58.054 -05:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-01-06 11:59:58.054 -05:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-01-06 11:59:58.054 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-01-06 11:59:58.054 -05:00 [DBG] Rendering check session result
2020-01-06 12:00:27.875 -05:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-01-06 12:00:27.879 -05:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-01-06 12:00:27.879 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-01-06 12:00:27.887 -05:00 [DBG] Processing signout request for 1
2020-01-06 12:00:27.893 -05:00 [DBG] Start end session request validation
2020-01-06 12:00:27.900 -05:00 [DBG] Start identity token validation
2020-01-06 12:00:27.939 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 12:00:27.939 -05:00 [DBG] Client found: js / JavaScript Client
2020-01-06 12:00:28.012 -05:00 [DBG] IsActive called from: IdentityTokenValidation
2020-01-06 12:00:28.013 -05:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-06 12:00:28.022 -05:00 [DBG] Token validation success
{"ClientId":"js","ClientName":"JavaScript Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1578329436,"exp":1578329736,"iss":"http://localhost:5093","aud":"js","nonce":"863d0f6630204ff194e2843b35131173","iat":1578329436,"at_hash":"PNxW9udg5kXNcuWF-_7r6A","sid":"7c73eba013061deaa54a97f66ed74c79","sub":"1","auth_time":1578329436,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-01-06 12:00:28.040 -05:00 [INF] End session request validation success
{"ClientId":"js","ClientName":"JavaScript Client","SubjectId":"1","PostLogOutUri":"http://localhost:5000/main","State":null,"Raw":{"id_token_hint":"eyJhbGciOiJSUzI1NiIsImtpZCI6IjVmYjMwMmEzOTdiZmNiNTQ1YTI3MTBjN2U0YWI0M2U1IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NzgzMjk0MzYsImV4cCI6MTU3ODMyOTczNiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDkzIiwiYXVkIjoianMiLCJub25jZSI6Ijg2M2QwZjY2MzAyMDRmZjE5NGUyODQzYjM1MTMxMTczIiwiaWF0IjoxNTc4MzI5NDM2LCJhdF9oYXNoIjoiUE54Vzl1ZGc1a1hOY3VXRi1fN3I2QSIsInNpZCI6IjdjNzNlYmEwMTMwNjFkZWFhNTRhOTdmNjZlZDc0Yzc5Iiwic3ViIjoiMSIsImF1dGhfdGltZSI6MTU3ODMyOTQzNiwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.0rgs9W70g-avP6GiB2sBsl1OaWIf9qGveBvu2WuxVeelOIltd_IgTYLiavJI9ThsDzLQOIbMLHBiUJszLZl55CUDcC_fe62diP_AZuS5KE3DzEodvFOiAAEyxvlA6mHFywaeBgB8HGv3CxRCi8RjxeOCdcK-CKl9CbjOarTZlpENHYXUb-GuKwhRHYKKwlopTMkvyKcfkGgpHeULK9DCpghel7TA8w5NTOkzuY2CQPKGTvrfuKlgvM4VS5UtUrJz_lhPrEO3XxWeLt2AWeiD2a5VIyEP932YBNMhCOe131zYqO1K_LK1e3EfbT4cKgUIDGXwYmHdFseKmzEC2oqrQg","post_logout_redirect_uri":"http://localhost:5000/main"},"$type":"EndSessionRequestValidationLog"}
2020-01-06 12:00:28.040 -05:00 [DBG] Success validating end session request from js
2020-01-06 12:00:28.268 -05:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-06 12:00:28.372 -05:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-01-06 12:00:28.374 -05:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-01-06 12:00:28.374 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-01-06 12:00:28.380 -05:00 [DBG] Processing signout callback request
2020-01-06 12:00:28.391 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 12:00:28.391 -05:00 [DBG] No client front-channel logout URLs
2020-01-06 12:00:28.391 -05:00 [DBG] No client back-channel logout URLs
2020-01-06 12:00:28.391 -05:00 [INF] Successful signout callback.
2020-01-06 12:00:28.391 -05:00 [DBG] No client front-channel iframe urls
2020-01-06 12:00:28.391 -05:00 [DBG] No client back-channel iframe urls
2020-01-06 12:00:40.651 -05:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5000
2020-01-06 12:00:40.651 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 12:00:40.651 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 12:00:40.651 -05:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-06 12:00:40.651 -05:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-06 12:00:40.651 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-06 12:00:40.651 -05:00 [DBG] Start discovery request
2020-01-06 12:00:40.721 -05:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-06 12:00:40.724 -05:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-06 12:00:40.724 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-06 12:00:40.731 -05:00 [DBG] Start authorize request
2020-01-06 12:00:40.737 -05:00 [DBG] No user present in authorize request
2020-01-06 12:00:40.747 -05:00 [DBG] Start authorize request protocol validation
2020-01-06 12:00:40.757 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 12:00:40.799 -05:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-06 12:00:40.803 -05:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:5000/callback","AllowedRedirectUris":["http://localhost:5000/callback","http://localhost:5000/static/silent-renew.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"8e2639f41a8342adb5e248c4efab6a1f","UiLocales":null,"Nonce":"49c488c3c4e347c1b7a57e9b2d31df64","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"js","redirect_uri":"http://localhost:5000/callback","response_type":"id_token token","scope":"openid profile api1","state":"8e2639f41a8342adb5e248c4efab6a1f","nonce":"49c488c3c4e347c1b7a57e9b2d31df64"},"$type":"AuthorizeRequestValidationLog"}
2020-01-06 12:00:40.813 -05:00 [INF] Showing login: User is not authenticated
2020-01-06 12:00:40.833 -05:00 [DBG] Start authorize request protocol validation
2020-01-06 12:00:40.833 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 12:00:40.833 -05:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-06 12:00:40.835 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 12:00:48.532 -05:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-06 12:00:48.563 -05:00 [DBG] Start authorize request protocol validation
2020-01-06 12:00:48.563 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 12:00:48.563 -05:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-06 12:00:48.574 -05:00 [DBG] Augmenting SignInContext
2020-01-06 12:00:48.578 -05:00 [DBG] Adding idp claim with value: local
2020-01-06 12:00:48.578 -05:00 [DBG] Adding amr claim with value: pwd
2020-01-06 12:00:48.584 -05:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-06 12:00:48.585 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 12:00:48.596 -05:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-06 12:00:48.597 -05:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-06 12:00:48.597 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-06 12:00:48.601 -05:00 [DBG] Start authorize callback request
2020-01-06 12:00:48.604 -05:00 [DBG] User in authorize request: 1
2020-01-06 12:00:48.604 -05:00 [DBG] Start authorize request protocol validation
2020-01-06 12:00:48.604 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 12:00:48.605 -05:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-06 12:00:48.605 -05:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"js","ClientName":"JavaScript Client","RedirectUri":"http://localhost:5000/callback","AllowedRedirectUris":["http://localhost:5000/callback","http://localhost:5000/static/silent-renew.html"],"SubjectId":"1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile api1","State":"8e2639f41a8342adb5e248c4efab6a1f","UiLocales":null,"Nonce":"49c488c3c4e347c1b7a57e9b2d31df64","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5c0cc810b12b8dd1e8be595dbc3d3576","Raw":{"client_id":"js","redirect_uri":"http://localhost:5000/callback","response_type":"id_token token","scope":"openid profile api1","state":"8e2639f41a8342adb5e248c4efab6a1f","nonce":"49c488c3c4e347c1b7a57e9b2d31df64"},"$type":"AuthorizeRequestValidationLog"}
2020-01-06 12:00:48.605 -05:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-06 12:00:48.614 -05:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-06 12:00:48.619 -05:00 [DBG] Creating Implicit Flow response.
2020-01-06 12:00:48.629 -05:00 [DBG] Getting claims for access token for client: js
2020-01-06 12:00:48.629 -05:00 [DBG] Getting claims for access token for subject: 1
2020-01-06 12:00:48.632 -05:00 [DBG] Get profile called for subject 1 from client JavaScript Client with claim types [] via ClaimsProviderAccessToken
2020-01-06 12:00:48.633 -05:00 [DBG] Issued claims: []
2020-01-06 12:00:48.666 -05:00 [DBG] Getting claims for identity token for subject: 1 and client: js
2020-01-06 12:00:48.666 -05:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-06 12:00:48.674 -05:00 [INF] Authorize endpoint response
{"SubjectId":"1","ClientId":"js","RedirectUri":"http://localhost:5000/callback","State":"8e2639f41a8342adb5e248c4efab6a1f","Scope":"openid profile api1","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-01-06 12:00:48.683 -05:00 [DBG] Augmenting SignInContext
2020-01-06 12:00:48.684 -05:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-06 12:00:50.783 -05:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5000
2020-01-06 12:00:50.783 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 12:00:50.783 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 12:00:50.783 -05:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-06 12:00:50.783 -05:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-06 12:00:50.784 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-06 12:00:50.784 -05:00 [DBG] Start discovery request
2020-01-06 12:00:50.793 -05:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5000
2020-01-06 12:00:50.793 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 12:00:50.793 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 12:00:50.793 -05:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-06 12:00:50.794 -05:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-06 12:00:50.794 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-06 12:00:50.799 -05:00 [DBG] Start key discovery request
2020-01-06 12:00:50.832 -05:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5000
2020-01-06 12:00:50.832 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 12:00:50.832 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 12:00:50.836 -05:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5000
2020-01-06 12:00:50.836 -05:00 [DBG] Client list checked and origin: http://localhost:5000 is allowed
2020-01-06 12:00:50.836 -05:00 [DBG] CorsPolicyService allowed origin: http://localhost:5000
2020-01-06 12:00:50.836 -05:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-06 12:00:50.837 -05:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-06 12:00:50.837 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-06 12:00:50.844 -05:00 [DBG] Start userinfo request
2020-01-06 12:00:50.848 -05:00 [DBG] Bearer token found in header
2020-01-06 12:00:50.859 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 12:00:50.860 -05:00 [DBG] client configuration validation for client js succeeded.
2020-01-06 12:00:50.860 -05:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-06 12:00:50.860 -05:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-06 12:00:50.861 -05:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1578330048,"exp":1579230048,"iss":"http://localhost:5093","aud":["http://localhost:5093/resources","api1"],"client_id":"js","sub":"1","auth_time":1578330048,"idp":"local","scope":["openid","profile","api1"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-01-06 12:00:50.862 -05:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-06 12:00:50.868 -05:00 [DBG] Creating userinfo response
2020-01-06 12:00:50.870 -05:00 [DBG] Scopes in access token: openid profile api1
2020-01-06 12:00:50.872 -05:00 [DBG] Scopes in access token: openid profile api1
2020-01-06 12:00:50.875 -05:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-06 12:00:50.875 -05:00 [DBG] Scopes in access token: openid profile api1
2020-01-06 12:00:50.875 -05:00 [DBG] Get profile called for subject 1 from client JavaScript Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-06 12:00:50.877 -05:00 [DBG] Issued claims: ["name","website"]
2020-01-06 12:00:50.877 -05:00 [INF] Profile service returned the following claim types: name website
2020-01-06 12:00:50.877 -05:00 [DBG] End userinfo request
2020-01-06 12:00:50.886 -05:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-01-06 12:00:50.887 -05:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-01-06 12:00:50.887 -05:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-01-06 12:00:50.887 -05:00 [DBG] Rendering check session result
